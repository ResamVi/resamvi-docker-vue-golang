user    julien users;   ## Give workers a name
worker_processes  4;    ## Use number of cores
# worker_rlimit_nofile     TODO: Stress testing


events {
    worker_connections 1024;    ## Use number of file descriptors allowed
}

http {    
    log_format main 
    'REMOTE ADDRESS:\t\t$remote_addr\n'
    'USER:\t\t\t$remote_user\n'
    'TIME:\t\t\t[$time_local]\n'
    'STATUS:\t\t\t$status\n'
    'REQUEST:\t\t$request\n'
    'SIZE:\t\t\t$body_bytes_sent\n'
    'REFERRER:\t\t"$http_referer"\n'
    'AGENT:\t\t\t"$http_user_agent"\n'
    'FORWARDED:\t\t$http_x_forwarded_for\n\n';
    
    access_log /dev/stdout main;
    
    types {
            text/html   html;
            text/css    css;
    }

    server {
        #server_name resamvi.de;    # Still do not understand this
        listen 9001;
        index index.html;           # When visiting localhost:9001 this page is shown  

        location / {
            root /home/julien/Work/Projekte/resamvitalized/build;
        }
        
        # To display gaestebuch we first need to fetch the guestbook entries
        # from the database and serve them afterwards
        # The service on port 8081 handles this
        location /gaestebuch {
            proxy_pass http://127.0.0.1:8081;
            root /home/julien/Work/Projekte/resamvitalized/build;
        }
        
        # To display a single standalone entry we need to redirect to
        # the responsible service on port 8082 with the given entry name
        # in the url for reading
        rewrite /(100abos|apfelkuchen|bouncingball|charitywalkandrun2017|chocolatechipcookies|erster|kaesekuchen|rheinuferlauf2017|schokokekse|screenbounce|spayle|start|statement-vs-expression) http://127.0.0.1:8082/$1;        
        
    }
}